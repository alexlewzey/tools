[project]
name = "tools"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "matplotlib[dev]>=3.9.4",
    "scipy[dev]>=1.13.1",
    "torch>=2.5.1",
    "torchaudio>=2.5.1",
    "torchvision>=0.20.1",
]

[project.optional-dependencies]
key-macro = [
    "autoflake>=2.3.1",
    "black>=24.10.0",
    "numpy>=2.2.0",
    "opencv-python>=4.10.0.84",
    "pillow>=11.0.0",
    "pynput>=1.7.7",
    "pyperclip>=1.9.0",
    "pytesseract>=0.3.13",
    "pyttsx3>=2.98",
    "sqlfluff>=3.3.0",
    "textblob>=0.18.0.post0",
]
test = [
    "docformatter>=1.7.5",
    "ipykernel>=6.29.5",
    "mypy>=1.13.0",
    "pre-commit>=4.0.1",
    "pytest>=8.3.4",
]
dev = [
    "pandas>=2.2.3",
]

[project.scripts]
km = "tools.key_macro.app:run"
cli = "tools.key_macro.cli:main"


[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true


[tool.ruff]
select = [
    "A", # Pyflakes: general checks
    "B", # pycodestyle: pycodestyle checks
    "C", # mccabe: complexity checks
    # "D",  # pydocstyle: docstring style checks
    "E",  # pycodestyle: pycodestyle errors
    "F",  # pyflakes: unused imports, variables, etc.
    "I",  # isort: import sorting
    "N",  # pep8-naming: naming conventions
    "S",  # bandit: security checks
    "W",  # pycodestyle: pycodestyle warnings
    "UP", # pyupgrade: upgrade python version syntax
]

ignore = [
    "S101", # Ignore use of assert detected
    "S108", # ignore use of tmp
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]
fix = true


[tool.setuptools]
packages = ["tools"]
