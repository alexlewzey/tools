[tool.poetry]
name = "tools"
version = "0.1.0"
description = ""
authors = ["Alexander Lewzey <a.lewzey@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
torch = "^2.5.1"
torchvision = "^0.20.1"
torchaudio = "^2.5.1"

[tool.poetry.group.key_macro.dependencies]
pynput = "^1.7.6"
pyperclip = "^1.8.2"
textblob = "^0.18.0.post0"
pytesseract = "^0.3.10"
numpy = "^1.26.4"
opencv-python = "^4.9.0.80"
pillow = "^10.3.0"
pyttsx3 = "^2.90"
autoflake = "^2.3.1"
sqlfluff = "^3.0.5"
black = "^24.4.2"

[tool.poetry.group.test.dependencies]
pytest = "^8.2.0"
mypy = "^1.10.0"
pre-commit = "^3.7.0"
docformatter = "^1.7.5"

[tool.poetry.group.dev.dependencies]
ipykernel = "^6.29.5"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
km = "tools.key_macro.app:run"
cli = 'tools.key_macro.cli:main'


[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true


[tool.ruff]
select = [
    "A", # Pyflakes: general checks
    "B", # pycodestyle: pycodestyle checks
    "C", # mccabe: complexity checks
    # "D",  # pydocstyle: docstring style checks
    "E",  # pycodestyle: pycodestyle errors
    "F",  # pyflakes: unused imports, variables, etc.
    "I",  # isort: import sorting
    "N",  # pep8-naming: naming conventions
    "S",  # bandit: security checks
    "W",  # pycodestyle: pycodestyle warnings
    "UP", # pyupgrade: upgrade python version syntax
]

ignore = [
    "S101", # Ignore use of assert detected
    "S108", # ignore use of tmp
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]
fix = true
